Terminals unused in grammar

   STRINGTYPE
   TURNEDLEFT
   TURNEDRIGHT
   NOASSOCIATIVE
   LV13
   LV12
   LV11
   LV10
   LV9
   LV8
   LV7
   LV6
   LV5
   LV4
   LV0_N
   LV0_R


Grammar

    0 $accept: startHere $end

    1 startHere: top

    2 top: scalarDeclare top
    3    | arrayDeclare top
    4    | functionDeclare top
    5    | functionDefinition top
    6    | %empty

    7 scalarDeclare: type ident identList EOL

    8 identList: COMMA ident identList
    9          | %empty

   10 ident: MULSTAR id
   11      | id

   12 id: IDENT giveScalar

   13 giveScalar: ASSIGN expr
   14           | %empty

   15 type: type1
   16     | type2
   17     | type3
   18     | type4

   19 type1: mayHaveConst mayHaveSign mayLongOrShort INTTYPE

   20 type2: mayHaveConst mayHaveSign LONGLONGTYPE
   21      | mayHaveConst mayHaveSign LONGTYPE
   22      | mayHaveConst mayHaveSign SHORTTYPE
   23      | mayHaveConst mayHaveSign CHARTYPE
   24      | mayHaveConst mayHaveSign CHAR4TYPE
   25      | mayHaveConst mayHaveSign CHAR8TYPE

   26 type3: mayHaveConst SIGNEDTYPE
   27      | mayHaveConst UNSIGNEDTYPE
   28      | mayHaveConst FLOATTYPE
   29      | mayHaveConst DOUBLETYPE
   30      | mayHaveConst VOIDTYPE

   31 type4: CONSTTYPE

   32 mayHaveConst: CONSTTYPE
   33             | %empty

   34 mayHaveSign: SIGNEDTYPE
   35            | UNSIGNEDTYPE
   36            | %empty

   37 mayLongOrShort: LONGLONGTYPE
   38               | LONGTYPE
   39               | SHORTTYPE
   40               | %empty

   41 arrayDeclare: type array arrayList EOL

   42 array: IDENT LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList giveArray

   43 arrayList: COMMA array arrayList
   44          | %empty

   45 lrSquareBracketList: LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList
   46                    | %empty

   47 giveArray: ASSIGN arrayContent
   48          | %empty

   49 arrayContent: LBRACE item itemList RBRACE
   50             | %empty

   51 itemList: COMMA item itemList
   52         | %empty

   53 item: expr
   54     | arrayContent

   55 expr: identOrArray
   56     | INT
   57     | DOUBLE
   58     | MYCHAR
   59     | MYSTRING
   60     | MYNULL
   61     | LPARENTHESIS expr RPARENTHESIS
   62     | expr ADDONE
   63     | expr MINUSONE
   64     | expr LPARENTHESIS contiExpr RPARENTHESIS
   65     | BITWISEAND expr
   66     | MULSTAR expr
   67     | TILDA expr
   68     | EXCLAMATION expr
   69     | ADD expr
   70     | MINUS expr
   71     | ADDONE expr
   72     | MINUSONE expr
   73     | LPARENTHESIS type MULSTAR RPARENTHESIS expr
   74     | LPARENTHESIS type RPARENTHESIS expr
   75     | expr MULSTAR expr
   76     | expr SLASH expr
   77     | expr MOD expr
   78     | expr ADD expr
   79     | expr MINUS expr
   80     | expr SHIFTLEFT expr
   81     | expr SHIFTRIGHT expr
   82     | expr BIG expr
   83     | expr BIGOREQ expr
   84     | expr SMALL expr
   85     | expr SMALLOREQ expr
   86     | expr EQ expr
   87     | expr NOTEQ expr
   88     | expr BITWISEAND expr
   89     | expr XOR expr
   90     | expr BITWISEOR expr
   91     | expr LOGICALAND expr
   92     | expr LOGICALOR expr
   93     | expr ASSIGN expr

   94 contiExpr: expr exprList
   95          | %empty

   96 exprList: COMMA expr exprList
   97         | %empty

   98 identOrArray: IDENT lrSquareBracketList

   99 functionDeclare: type IDENT LPARENTHESIS parameters RPARENTHESIS EOL
  100                | type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS EOL

  101 parameters: parameter parameterList
  102           | %empty

  103 parameterList: COMMA parameter parameterList
  104              | %empty

  105 parameter: type IDENT
  106          | type MULSTAR IDENT

  107 functionDefinition: type IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt
  108                   | type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt

  109 compoundStmt: LBRACE stmtOrVarDeclares RBRACE

  110 stmtOrVarDeclares: stmtOrVarDeclare stmtOrVarDeclares
  111                  | %empty

  112 stmtOrVarDeclare: stmt
  113                 | scalarDeclare
  114                 | arrayDeclare

  115 stmt: expr EOL
  116     | ifOrIfElseStmt
  117     | switchStmt
  118     | whileStmt
  119     | forStmt
  120     | returnBreakContinueStmt
  121     | compoundStmt

  122 returnBreakContinueStmt: RETURN expr EOL
  123                        | RETURN EOL
  124                        | BREAK EOL
  125                        | CONTINUE EOL

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt

  127 mayHaveExpr: expr
  128            | %empty

  129 whileStmt: WHILE LPARENTHESIS expr RPARENTHESIS stmt
  130          | DO stmt WHILE LPARENTHESIS expr RPARENTHESIS EOL

  131 switchStmt: SWITCH LPARENTHESIS expr RPARENTHESIS LBRACE switchCluses RBRACE

  132 switchCluses: switchClue switchCluses
  133             | %empty

  134 switchClue: CASE expr COLON stmts
  135           | DEFAULT COLON stmts

  136 stmts: stmt stmts
  137      | %empty

  138 ifOrIfElseStmt: IF LPARENTHESIS expr RPARENTHESIS compoundStmt mayHaveElse

  139 mayHaveElse: ELSE compoundStmt
  140            | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 56
MYCHAR (259) 58
MYSTRING (260) 59
MYNULL (261) 60
DOUBLE (262) 57
INTTYPE (263) 19
CHARTYPE (264) 23
STRINGTYPE (265)
DOUBLETYPE (266) 29
FLOATTYPE (267) 28
CONSTTYPE (268) 31 32
SIGNEDTYPE (269) 26 34
UNSIGNEDTYPE (270) 27 35
LONGLONGTYPE (271) 20 37
LONGTYPE (272) 21 38
SHORTTYPE (273) 22 39
VOIDTYPE (274) 30
CHAR4TYPE (275) 24
CHAR8TYPE (276) 25
RETURN (277) 122 123
BREAK (278) 124
CONTINUE (279) 125
FOR (280) 126
WHILE (281) 129 130
DO (282) 130
SWITCH (283) 131
CASE (284) 134
DEFAULT (285) 135
IF (286) 138
ELSE (287) 139
IDENT (288) 12 42 98 99 100 105 106 107 108
ASSIGN (289) 13 47 93
LOGICALOR (290) 92
LOGICALAND (291) 91
BITWISEOR (292) 90
XOR (293) 89
EQ (294) 86
NOTEQ (295) 87
BIGOREQ (296) 83
SMALLOREQ (297) 85
BIG (298) 82
SMALL (299) 84
SHIFTLEFT (300) 80
SHIFTRIGHT (301) 81
SLASH (302) 76
MOD (303) 77
ADD (304) 69 78
MINUS (305) 70 79
TILDA (306) 67
EXCLAMATION (307) 68
BITWISEAND (308) 65 88
MULSTAR (309) 10 66 73 75 100 106 108
ADDONE (310) 62 71
MINUSONE (311) 63 72
COMMA (312) 8 43 51 96 103
EOL (313) 7 41 99 100 115 122 123 124 125 126 130
LSQUAREBRACKET (314) 42 45
RSQUAREBRACKET (315) 42 45
LBRACE (316) 49 109 131
RBRACE (317) 49 109 131
LPARENTHESIS (318) 61 64 73 74 99 100 107 108 126 129 130 131 138
RPARENTHESIS (319) 61 64 73 74 99 100 107 108 126 129 130 131 138
COLON (320) 134 135
TURNEDLEFT (321)
TURNEDRIGHT (322)
NOASSOCIATIVE (323)
LV13 (324)
LV12 (325)
LV11 (326)
LV10 (327)
LV9 (328)
LV8 (329)
LV7 (330)
LV6 (331)
LV5 (332)
LV4 (333)
LV3 (334)
LV2 (335)
LV1 (336)
LV0_L (337)
LV0_N (338)
LV0_R (339)


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
startHere (86)
    on left: 1, on right: 0
top (87)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
scalarDeclare (88)
    on left: 7, on right: 2 113
identList (89)
    on left: 8 9, on right: 7 8
ident (90)
    on left: 10 11, on right: 7 8
id (91)
    on left: 12, on right: 10 11
giveScalar (92)
    on left: 13 14, on right: 12
type (93)
    on left: 15 16 17 18, on right: 7 41 73 74 99 100 105 106 107 108
type1 (94)
    on left: 19, on right: 15
type2 (95)
    on left: 20 21 22 23 24 25, on right: 16
type3 (96)
    on left: 26 27 28 29 30, on right: 17
type4 (97)
    on left: 31, on right: 18
mayHaveConst (98)
    on left: 32 33, on right: 19 20 21 22 23 24 25 26 27 28 29 30
mayHaveSign (99)
    on left: 34 35 36, on right: 19 20 21 22 23 24 25
mayLongOrShort (100)
    on left: 37 38 39 40, on right: 19
arrayDeclare (101)
    on left: 41, on right: 3 114
array (102)
    on left: 42, on right: 41 43
arrayList (103)
    on left: 43 44, on right: 41 43
lrSquareBracketList (104)
    on left: 45 46, on right: 42 45 98
giveArray (105)
    on left: 47 48, on right: 42
arrayContent (106)
    on left: 49 50, on right: 47 54
itemList (107)
    on left: 51 52, on right: 49 51
item (108)
    on left: 53 54, on right: 49 51
expr (109)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93,
    on right: 13 42 45 53 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 96
    115 122 127 129 130 131 134 138
contiExpr (110)
    on left: 94 95, on right: 64
exprList (111)
    on left: 96 97, on right: 94 96
identOrArray (112)
    on left: 98, on right: 55
functionDeclare (113)
    on left: 99 100, on right: 4
parameters (114)
    on left: 101 102, on right: 99 100 107 108
parameterList (115)
    on left: 103 104, on right: 101 103
parameter (116)
    on left: 105 106, on right: 101 103
functionDefinition (117)
    on left: 107 108, on right: 5
compoundStmt (118)
    on left: 109, on right: 107 108 121 138 139
stmtOrVarDeclares (119)
    on left: 110 111, on right: 109 110
stmtOrVarDeclare (120)
    on left: 112 113 114, on right: 110
stmt (121)
    on left: 115 116 117 118 119 120 121, on right: 112 126 129 130
    136
returnBreakContinueStmt (122)
    on left: 122 123 124 125, on right: 120
forStmt (123)
    on left: 126, on right: 119
mayHaveExpr (124)
    on left: 127 128, on right: 126
whileStmt (125)
    on left: 129 130, on right: 118
switchStmt (126)
    on left: 131, on right: 117
switchCluses (127)
    on left: 132 133, on right: 131 132
switchClue (128)
    on left: 134 135, on right: 132
stmts (129)
    on left: 136 137, on right: 134 135 136
ifOrIfElseStmt (130)
    on left: 138, on right: 116
mayHaveElse (131)
    on left: 139 140, on right: 138


State 0

    0 $accept: . startHere $end

    CONSTTYPE  shift, and go to state 1

    $end      reduce using rule 6 (top)
    $default  reduce using rule 33 (mayHaveConst)

    startHere           go to state 2
    top                 go to state 3
    scalarDeclare       go to state 4
    type                go to state 5
    type1               go to state 6
    type2               go to state 7
    type3               go to state 8
    type4               go to state 9
    mayHaveConst        go to state 10
    arrayDeclare        go to state 11
    functionDeclare     go to state 12
    functionDefinition  go to state 13


State 1

   31 type4: CONSTTYPE .
   32 mayHaveConst: CONSTTYPE .

    IDENT         reduce using rule 31 (type4)
    MULSTAR       reduce using rule 31 (type4)
    RPARENTHESIS  reduce using rule 31 (type4)
    $default      reduce using rule 32 (mayHaveConst)


State 2

    0 $accept: startHere . $end

    $end  shift, and go to state 14


State 3

    1 startHere: top .

    $default  reduce using rule 1 (startHere)


State 4

    2 top: scalarDeclare . top

    CONSTTYPE  shift, and go to state 1

    $end      reduce using rule 6 (top)
    $default  reduce using rule 33 (mayHaveConst)

    top                 go to state 15
    scalarDeclare       go to state 4
    type                go to state 5
    type1               go to state 6
    type2               go to state 7
    type3               go to state 8
    type4               go to state 9
    mayHaveConst        go to state 10
    arrayDeclare        go to state 11
    functionDeclare     go to state 12
    functionDefinition  go to state 13


State 5

    7 scalarDeclare: type . ident identList EOL
   41 arrayDeclare: type . array arrayList EOL
   99 functionDeclare: type . IDENT LPARENTHESIS parameters RPARENTHESIS EOL
  100                | type . MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS EOL
  107 functionDefinition: type . IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt
  108                   | type . MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt

    IDENT    shift, and go to state 16
    MULSTAR  shift, and go to state 17

    ident  go to state 18
    id     go to state 19
    array  go to state 20


State 6

   15 type: type1 .

    $default  reduce using rule 15 (type)


State 7

   16 type: type2 .

    $default  reduce using rule 16 (type)


State 8

   17 type: type3 .

    $default  reduce using rule 17 (type)


State 9

   18 type: type4 .

    $default  reduce using rule 18 (type)


State 10

   19 type1: mayHaveConst . mayHaveSign mayLongOrShort INTTYPE
   20 type2: mayHaveConst . mayHaveSign LONGLONGTYPE
   21      | mayHaveConst . mayHaveSign LONGTYPE
   22      | mayHaveConst . mayHaveSign SHORTTYPE
   23      | mayHaveConst . mayHaveSign CHARTYPE
   24      | mayHaveConst . mayHaveSign CHAR4TYPE
   25      | mayHaveConst . mayHaveSign CHAR8TYPE
   26 type3: mayHaveConst . SIGNEDTYPE
   27      | mayHaveConst . UNSIGNEDTYPE
   28      | mayHaveConst . FLOATTYPE
   29      | mayHaveConst . DOUBLETYPE
   30      | mayHaveConst . VOIDTYPE

    DOUBLETYPE    shift, and go to state 21
    FLOATTYPE     shift, and go to state 22
    SIGNEDTYPE    shift, and go to state 23
    UNSIGNEDTYPE  shift, and go to state 24
    VOIDTYPE      shift, and go to state 25

    $default  reduce using rule 36 (mayHaveSign)

    mayHaveSign  go to state 26


State 11

    3 top: arrayDeclare . top

    CONSTTYPE  shift, and go to state 1

    $end      reduce using rule 6 (top)
    $default  reduce using rule 33 (mayHaveConst)

    top                 go to state 27
    scalarDeclare       go to state 4
    type                go to state 5
    type1               go to state 6
    type2               go to state 7
    type3               go to state 8
    type4               go to state 9
    mayHaveConst        go to state 10
    arrayDeclare        go to state 11
    functionDeclare     go to state 12
    functionDefinition  go to state 13


State 12

    4 top: functionDeclare . top

    CONSTTYPE  shift, and go to state 1

    $end      reduce using rule 6 (top)
    $default  reduce using rule 33 (mayHaveConst)

    top                 go to state 28
    scalarDeclare       go to state 4
    type                go to state 5
    type1               go to state 6
    type2               go to state 7
    type3               go to state 8
    type4               go to state 9
    mayHaveConst        go to state 10
    arrayDeclare        go to state 11
    functionDeclare     go to state 12
    functionDefinition  go to state 13


State 13

    5 top: functionDefinition . top

    CONSTTYPE  shift, and go to state 1

    $end      reduce using rule 6 (top)
    $default  reduce using rule 33 (mayHaveConst)

    top                 go to state 29
    scalarDeclare       go to state 4
    type                go to state 5
    type1               go to state 6
    type2               go to state 7
    type3               go to state 8
    type4               go to state 9
    mayHaveConst        go to state 10
    arrayDeclare        go to state 11
    functionDeclare     go to state 12
    functionDefinition  go to state 13


State 14

    0 $accept: startHere $end .

    $default  accept


State 15

    2 top: scalarDeclare top .

    $default  reduce using rule 2 (top)


State 16

   12 id: IDENT . giveScalar
   42 array: IDENT . LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList giveArray
   99 functionDeclare: type IDENT . LPARENTHESIS parameters RPARENTHESIS EOL
  107 functionDefinition: type IDENT . LPARENTHESIS parameters RPARENTHESIS compoundStmt

    ASSIGN          shift, and go to state 30
    LSQUAREBRACKET  shift, and go to state 31
    LPARENTHESIS    shift, and go to state 32

    $default  reduce using rule 14 (giveScalar)

    giveScalar  go to state 33


State 17

   10 ident: MULSTAR . id
  100 functionDeclare: type MULSTAR . IDENT LPARENTHESIS parameters RPARENTHESIS EOL
  108 functionDefinition: type MULSTAR . IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt

    IDENT  shift, and go to state 34

    id  go to state 35


State 18

    7 scalarDeclare: type ident . identList EOL

    COMMA  shift, and go to state 36

    $default  reduce using rule 9 (identList)

    identList  go to state 37


State 19

   11 ident: id .

    $default  reduce using rule 11 (ident)


State 20

   41 arrayDeclare: type array . arrayList EOL

    COMMA  shift, and go to state 38

    $default  reduce using rule 44 (arrayList)

    arrayList  go to state 39


State 21

   29 type3: mayHaveConst DOUBLETYPE .

    $default  reduce using rule 29 (type3)


State 22

   28 type3: mayHaveConst FLOATTYPE .

    $default  reduce using rule 28 (type3)


State 23

   26 type3: mayHaveConst SIGNEDTYPE .
   34 mayHaveSign: SIGNEDTYPE .

    IDENT         reduce using rule 26 (type3)
    MULSTAR       reduce using rule 26 (type3)
    RPARENTHESIS  reduce using rule 26 (type3)
    $default      reduce using rule 34 (mayHaveSign)


State 24

   27 type3: mayHaveConst UNSIGNEDTYPE .
   35 mayHaveSign: UNSIGNEDTYPE .

    IDENT         reduce using rule 27 (type3)
    MULSTAR       reduce using rule 27 (type3)
    RPARENTHESIS  reduce using rule 27 (type3)
    $default      reduce using rule 35 (mayHaveSign)


State 25

   30 type3: mayHaveConst VOIDTYPE .

    $default  reduce using rule 30 (type3)


State 26

   19 type1: mayHaveConst mayHaveSign . mayLongOrShort INTTYPE
   20 type2: mayHaveConst mayHaveSign . LONGLONGTYPE
   21      | mayHaveConst mayHaveSign . LONGTYPE
   22      | mayHaveConst mayHaveSign . SHORTTYPE
   23      | mayHaveConst mayHaveSign . CHARTYPE
   24      | mayHaveConst mayHaveSign . CHAR4TYPE
   25      | mayHaveConst mayHaveSign . CHAR8TYPE

    CHARTYPE      shift, and go to state 40
    LONGLONGTYPE  shift, and go to state 41
    LONGTYPE      shift, and go to state 42
    SHORTTYPE     shift, and go to state 43
    CHAR4TYPE     shift, and go to state 44
    CHAR8TYPE     shift, and go to state 45

    $default  reduce using rule 40 (mayLongOrShort)

    mayLongOrShort  go to state 46


State 27

    3 top: arrayDeclare top .

    $default  reduce using rule 3 (top)


State 28

    4 top: functionDeclare top .

    $default  reduce using rule 4 (top)


State 29

    5 top: functionDefinition top .

    $default  reduce using rule 5 (top)


State 30

   13 giveScalar: ASSIGN . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 62
    identOrArray  go to state 63


State 31

   42 array: IDENT LSQUAREBRACKET . expr RSQUAREBRACKET lrSquareBracketList giveArray

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 64
    identOrArray  go to state 63


State 32

   99 functionDeclare: type IDENT LPARENTHESIS . parameters RPARENTHESIS EOL
  107 functionDefinition: type IDENT LPARENTHESIS . parameters RPARENTHESIS compoundStmt

    CONSTTYPE  shift, and go to state 1

    RPARENTHESIS  reduce using rule 102 (parameters)
    $default      reduce using rule 33 (mayHaveConst)

    type          go to state 65
    type1         go to state 6
    type2         go to state 7
    type3         go to state 8
    type4         go to state 9
    mayHaveConst  go to state 10
    parameters    go to state 66
    parameter     go to state 67


State 33

   12 id: IDENT giveScalar .

    $default  reduce using rule 12 (id)


State 34

   12 id: IDENT . giveScalar
  100 functionDeclare: type MULSTAR IDENT . LPARENTHESIS parameters RPARENTHESIS EOL
  108 functionDefinition: type MULSTAR IDENT . LPARENTHESIS parameters RPARENTHESIS compoundStmt

    ASSIGN        shift, and go to state 30
    LPARENTHESIS  shift, and go to state 68

    $default  reduce using rule 14 (giveScalar)

    giveScalar  go to state 33


State 35

   10 ident: MULSTAR id .

    $default  reduce using rule 10 (ident)


State 36

    8 identList: COMMA . ident identList

    IDENT    shift, and go to state 69
    MULSTAR  shift, and go to state 70

    ident  go to state 71
    id     go to state 19


State 37

    7 scalarDeclare: type ident identList . EOL

    EOL  shift, and go to state 72


State 38

   43 arrayList: COMMA . array arrayList

    IDENT  shift, and go to state 73

    array  go to state 74


State 39

   41 arrayDeclare: type array arrayList . EOL

    EOL  shift, and go to state 75


State 40

   23 type2: mayHaveConst mayHaveSign CHARTYPE .

    $default  reduce using rule 23 (type2)


State 41

   20 type2: mayHaveConst mayHaveSign LONGLONGTYPE .
   37 mayLongOrShort: LONGLONGTYPE .

    INTTYPE   reduce using rule 37 (mayLongOrShort)
    $default  reduce using rule 20 (type2)


State 42

   21 type2: mayHaveConst mayHaveSign LONGTYPE .
   38 mayLongOrShort: LONGTYPE .

    INTTYPE   reduce using rule 38 (mayLongOrShort)
    $default  reduce using rule 21 (type2)


State 43

   22 type2: mayHaveConst mayHaveSign SHORTTYPE .
   39 mayLongOrShort: SHORTTYPE .

    INTTYPE   reduce using rule 39 (mayLongOrShort)
    $default  reduce using rule 22 (type2)


State 44

   24 type2: mayHaveConst mayHaveSign CHAR4TYPE .

    $default  reduce using rule 24 (type2)


State 45

   25 type2: mayHaveConst mayHaveSign CHAR8TYPE .

    $default  reduce using rule 25 (type2)


State 46

   19 type1: mayHaveConst mayHaveSign mayLongOrShort . INTTYPE

    INTTYPE  shift, and go to state 76


State 47

   56 expr: INT .

    $default  reduce using rule 56 (expr)


State 48

   58 expr: MYCHAR .

    $default  reduce using rule 58 (expr)


State 49

   59 expr: MYSTRING .

    $default  reduce using rule 59 (expr)


State 50

   60 expr: MYNULL .

    $default  reduce using rule 60 (expr)


State 51

   57 expr: DOUBLE .

    $default  reduce using rule 57 (expr)


State 52

   98 identOrArray: IDENT . lrSquareBracketList

    LSQUAREBRACKET  shift, and go to state 77

    $default  reduce using rule 46 (lrSquareBracketList)

    lrSquareBracketList  go to state 78


State 53

   69 expr: ADD . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 79
    identOrArray  go to state 63


State 54

   70 expr: MINUS . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 80
    identOrArray  go to state 63


State 55

   67 expr: TILDA . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 81
    identOrArray  go to state 63


State 56

   68 expr: EXCLAMATION . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 82
    identOrArray  go to state 63


State 57

   65 expr: BITWISEAND . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 83
    identOrArray  go to state 63


State 58

   66 expr: MULSTAR . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 84
    identOrArray  go to state 63


State 59

   71 expr: ADDONE . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 85
    identOrArray  go to state 63


State 60

   72 expr: MINUSONE . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 86
    identOrArray  go to state 63


State 61

   61 expr: LPARENTHESIS . expr RPARENTHESIS
   73     | LPARENTHESIS . type MULSTAR RPARENTHESIS expr
   74     | LPARENTHESIS . type RPARENTHESIS expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    CONSTTYPE     shift, and go to state 1
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 33 (mayHaveConst)

    type          go to state 87
    type1         go to state 6
    type2         go to state 7
    type3         go to state 8
    type4         go to state 9
    mayHaveConst  go to state 10
    expr          go to state 88
    identOrArray  go to state 63


State 62

   13 giveScalar: ASSIGN expr .
   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 13 (giveScalar)


State 63

   55 expr: identOrArray .

    $default  reduce using rule 55 (expr)


State 64

   42 array: IDENT LSQUAREBRACKET expr . RSQUAREBRACKET lrSquareBracketList giveArray
   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ASSIGN          shift, and go to state 89
    LOGICALOR       shift, and go to state 90
    LOGICALAND      shift, and go to state 91
    BITWISEOR       shift, and go to state 92
    XOR             shift, and go to state 93
    EQ              shift, and go to state 94
    NOTEQ           shift, and go to state 95
    BIGOREQ         shift, and go to state 96
    SMALLOREQ       shift, and go to state 97
    BIG             shift, and go to state 98
    SMALL           shift, and go to state 99
    SHIFTLEFT       shift, and go to state 100
    SHIFTRIGHT      shift, and go to state 101
    SLASH           shift, and go to state 102
    MOD             shift, and go to state 103
    ADD             shift, and go to state 104
    MINUS           shift, and go to state 105
    BITWISEAND      shift, and go to state 106
    MULSTAR         shift, and go to state 107
    ADDONE          shift, and go to state 108
    MINUSONE        shift, and go to state 109
    RSQUAREBRACKET  shift, and go to state 111
    LPARENTHESIS    shift, and go to state 110


State 65

  105 parameter: type . IDENT
  106          | type . MULSTAR IDENT

    IDENT    shift, and go to state 112
    MULSTAR  shift, and go to state 113


State 66

   99 functionDeclare: type IDENT LPARENTHESIS parameters . RPARENTHESIS EOL
  107 functionDefinition: type IDENT LPARENTHESIS parameters . RPARENTHESIS compoundStmt

    RPARENTHESIS  shift, and go to state 114


State 67

  101 parameters: parameter . parameterList

    COMMA  shift, and go to state 115

    $default  reduce using rule 104 (parameterList)

    parameterList  go to state 116


State 68

  100 functionDeclare: type MULSTAR IDENT LPARENTHESIS . parameters RPARENTHESIS EOL
  108 functionDefinition: type MULSTAR IDENT LPARENTHESIS . parameters RPARENTHESIS compoundStmt

    CONSTTYPE  shift, and go to state 1

    RPARENTHESIS  reduce using rule 102 (parameters)
    $default      reduce using rule 33 (mayHaveConst)

    type          go to state 65
    type1         go to state 6
    type2         go to state 7
    type3         go to state 8
    type4         go to state 9
    mayHaveConst  go to state 10
    parameters    go to state 117
    parameter     go to state 67


State 69

   12 id: IDENT . giveScalar

    ASSIGN  shift, and go to state 30

    $default  reduce using rule 14 (giveScalar)

    giveScalar  go to state 33


State 70

   10 ident: MULSTAR . id

    IDENT  shift, and go to state 69

    id  go to state 35


State 71

    8 identList: COMMA ident . identList

    COMMA  shift, and go to state 36

    $default  reduce using rule 9 (identList)

    identList  go to state 118


State 72

    7 scalarDeclare: type ident identList EOL .

    $default  reduce using rule 7 (scalarDeclare)


State 73

   42 array: IDENT . LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList giveArray

    LSQUAREBRACKET  shift, and go to state 31


State 74

   43 arrayList: COMMA array . arrayList

    COMMA  shift, and go to state 38

    $default  reduce using rule 44 (arrayList)

    arrayList  go to state 119


State 75

   41 arrayDeclare: type array arrayList EOL .

    $default  reduce using rule 41 (arrayDeclare)


State 76

   19 type1: mayHaveConst mayHaveSign mayLongOrShort INTTYPE .

    $default  reduce using rule 19 (type1)


State 77

   45 lrSquareBracketList: LSQUAREBRACKET . expr RSQUAREBRACKET lrSquareBracketList

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 120
    identOrArray  go to state 63


State 78

   98 identOrArray: IDENT lrSquareBracketList .

    $default  reduce using rule 98 (identOrArray)


State 79

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   69     | ADD expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 69 (expr)


State 80

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   70     | MINUS expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 70 (expr)


State 81

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   67     | TILDA expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 67 (expr)


State 82

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   68     | EXCLAMATION expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 68 (expr)


State 83

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   65     | BITWISEAND expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 65 (expr)


State 84

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   66     | MULSTAR expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 66 (expr)


State 85

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   71     | ADDONE expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 71 (expr)


State 86

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   72     | MINUSONE expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 72 (expr)


State 87

   73 expr: LPARENTHESIS type . MULSTAR RPARENTHESIS expr
   74     | LPARENTHESIS type . RPARENTHESIS expr

    MULSTAR       shift, and go to state 121
    RPARENTHESIS  shift, and go to state 122


State 88

   61 expr: LPARENTHESIS expr . RPARENTHESIS
   62     | expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    RPARENTHESIS  shift, and go to state 123


State 89

   93 expr: expr ASSIGN . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 124
    identOrArray  go to state 63


State 90

   92 expr: expr LOGICALOR . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 125
    identOrArray  go to state 63


State 91

   91 expr: expr LOGICALAND . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 126
    identOrArray  go to state 63


State 92

   90 expr: expr BITWISEOR . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 127
    identOrArray  go to state 63


State 93

   89 expr: expr XOR . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 128
    identOrArray  go to state 63


State 94

   86 expr: expr EQ . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 129
    identOrArray  go to state 63


State 95

   87 expr: expr NOTEQ . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 130
    identOrArray  go to state 63


State 96

   83 expr: expr BIGOREQ . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 131
    identOrArray  go to state 63


State 97

   85 expr: expr SMALLOREQ . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 132
    identOrArray  go to state 63


State 98

   82 expr: expr BIG . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 133
    identOrArray  go to state 63


State 99

   84 expr: expr SMALL . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 134
    identOrArray  go to state 63


State 100

   80 expr: expr SHIFTLEFT . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 135
    identOrArray  go to state 63


State 101

   81 expr: expr SHIFTRIGHT . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 136
    identOrArray  go to state 63


State 102

   76 expr: expr SLASH . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 137
    identOrArray  go to state 63


State 103

   77 expr: expr MOD . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 138
    identOrArray  go to state 63


State 104

   78 expr: expr ADD . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 139
    identOrArray  go to state 63


State 105

   79 expr: expr MINUS . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 140
    identOrArray  go to state 63


State 106

   88 expr: expr BITWISEAND . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 141
    identOrArray  go to state 63


State 107

   75 expr: expr MULSTAR . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 142
    identOrArray  go to state 63


State 108

   62 expr: expr ADDONE .

    $default  reduce using rule 62 (expr)


State 109

   63 expr: expr MINUSONE .

    $default  reduce using rule 63 (expr)


State 110

   64 expr: expr LPARENTHESIS . contiExpr RPARENTHESIS

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 95 (contiExpr)

    expr          go to state 143
    contiExpr     go to state 144
    identOrArray  go to state 63


State 111

   42 array: IDENT LSQUAREBRACKET expr RSQUAREBRACKET . lrSquareBracketList giveArray

    LSQUAREBRACKET  shift, and go to state 77

    $default  reduce using rule 46 (lrSquareBracketList)

    lrSquareBracketList  go to state 145


State 112

  105 parameter: type IDENT .

    $default  reduce using rule 105 (parameter)


State 113

  106 parameter: type MULSTAR . IDENT

    IDENT  shift, and go to state 146


State 114

   99 functionDeclare: type IDENT LPARENTHESIS parameters RPARENTHESIS . EOL
  107 functionDefinition: type IDENT LPARENTHESIS parameters RPARENTHESIS . compoundStmt

    EOL     shift, and go to state 147
    LBRACE  shift, and go to state 148

    compoundStmt  go to state 149


State 115

  103 parameterList: COMMA . parameter parameterList

    CONSTTYPE  shift, and go to state 1

    $default  reduce using rule 33 (mayHaveConst)

    type          go to state 65
    type1         go to state 6
    type2         go to state 7
    type3         go to state 8
    type4         go to state 9
    mayHaveConst  go to state 10
    parameter     go to state 150


State 116

  101 parameters: parameter parameterList .

    $default  reduce using rule 101 (parameters)


State 117

  100 functionDeclare: type MULSTAR IDENT LPARENTHESIS parameters . RPARENTHESIS EOL
  108 functionDefinition: type MULSTAR IDENT LPARENTHESIS parameters . RPARENTHESIS compoundStmt

    RPARENTHESIS  shift, and go to state 151


State 118

    8 identList: COMMA ident identList .

    $default  reduce using rule 8 (identList)


State 119

   43 arrayList: COMMA array arrayList .

    $default  reduce using rule 43 (arrayList)


State 120

   45 lrSquareBracketList: LSQUAREBRACKET expr . RSQUAREBRACKET lrSquareBracketList
   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ASSIGN          shift, and go to state 89
    LOGICALOR       shift, and go to state 90
    LOGICALAND      shift, and go to state 91
    BITWISEOR       shift, and go to state 92
    XOR             shift, and go to state 93
    EQ              shift, and go to state 94
    NOTEQ           shift, and go to state 95
    BIGOREQ         shift, and go to state 96
    SMALLOREQ       shift, and go to state 97
    BIG             shift, and go to state 98
    SMALL           shift, and go to state 99
    SHIFTLEFT       shift, and go to state 100
    SHIFTRIGHT      shift, and go to state 101
    SLASH           shift, and go to state 102
    MOD             shift, and go to state 103
    ADD             shift, and go to state 104
    MINUS           shift, and go to state 105
    BITWISEAND      shift, and go to state 106
    MULSTAR         shift, and go to state 107
    ADDONE          shift, and go to state 108
    MINUSONE        shift, and go to state 109
    RSQUAREBRACKET  shift, and go to state 152
    LPARENTHESIS    shift, and go to state 110


State 121

   73 expr: LPARENTHESIS type MULSTAR . RPARENTHESIS expr

    RPARENTHESIS  shift, and go to state 153


State 122

   74 expr: LPARENTHESIS type RPARENTHESIS . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 154
    identOrArray  go to state 63


State 123

   61 expr: LPARENTHESIS expr RPARENTHESIS .

    $default  reduce using rule 61 (expr)


State 124

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
   93     | expr ASSIGN expr .

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 93 (expr)


State 125

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   92     | expr LOGICALOR expr .
   93     | expr . ASSIGN expr

    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 92 (expr)


State 126

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   91     | expr LOGICALAND expr .
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 91 (expr)


State 127

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   90     | expr BITWISEOR expr .
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 90 (expr)


State 128

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   89     | expr XOR expr .
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 89 (expr)


State 129

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   86     | expr EQ expr .
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 86 (expr)


State 130

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   87     | expr NOTEQ expr .
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 87 (expr)


State 131

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   83     | expr BIGOREQ expr .
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 83 (expr)


State 132

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   85     | expr SMALLOREQ expr .
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 85 (expr)


State 133

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   82     | expr BIG expr .
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 82 (expr)


State 134

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   84     | expr SMALL expr .
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 84 (expr)


State 135

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   80     | expr SHIFTLEFT expr .
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 80 (expr)


State 136

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   81     | expr SHIFTRIGHT expr .
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 81 (expr)


State 137

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   76     | expr SLASH expr .
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 76 (expr)


State 138

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   77     | expr MOD expr .
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 77 (expr)


State 139

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   78     | expr ADD expr .
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 78 (expr)


State 140

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   79     | expr MINUS expr .
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 79 (expr)


State 141

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   88     | expr BITWISEAND expr .
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 88 (expr)


State 142

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   75     | expr MULSTAR expr .
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 75 (expr)


State 143

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
   94 contiExpr: expr . exprList

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    COMMA         shift, and go to state 155
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 97 (exprList)

    exprList  go to state 156


State 144

   64 expr: expr LPARENTHESIS contiExpr . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 157


State 145

   42 array: IDENT LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList . giveArray

    ASSIGN  shift, and go to state 158

    $default  reduce using rule 48 (giveArray)

    giveArray  go to state 159


State 146

  106 parameter: type MULSTAR IDENT .

    $default  reduce using rule 106 (parameter)


State 147

   99 functionDeclare: type IDENT LPARENTHESIS parameters RPARENTHESIS EOL .

    $default  reduce using rule 99 (functionDeclare)


State 148

  109 compoundStmt: LBRACE . stmtOrVarDeclares RBRACE

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    CONSTTYPE     shift, and go to state 1
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    RBRACE    reduce using rule 111 (stmtOrVarDeclares)
    $default  reduce using rule 33 (mayHaveConst)

    scalarDeclare            go to state 168
    type                     go to state 169
    type1                    go to state 6
    type2                    go to state 7
    type3                    go to state 8
    type4                    go to state 9
    mayHaveConst             go to state 10
    arrayDeclare             go to state 170
    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmtOrVarDeclares        go to state 173
    stmtOrVarDeclare         go to state 174
    stmt                     go to state 175
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    ifOrIfElseStmt           go to state 180


State 149

  107 functionDefinition: type IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt .

    $default  reduce using rule 107 (functionDefinition)


State 150

  103 parameterList: COMMA parameter . parameterList

    COMMA  shift, and go to state 115

    $default  reduce using rule 104 (parameterList)

    parameterList  go to state 181


State 151

  100 functionDeclare: type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS . EOL
  108 functionDefinition: type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS . compoundStmt

    EOL     shift, and go to state 182
    LBRACE  shift, and go to state 148

    compoundStmt  go to state 183


State 152

   45 lrSquareBracketList: LSQUAREBRACKET expr RSQUAREBRACKET . lrSquareBracketList

    LSQUAREBRACKET  shift, and go to state 77

    $default  reduce using rule 46 (lrSquareBracketList)

    lrSquareBracketList  go to state 184


State 153

   73 expr: LPARENTHESIS type MULSTAR RPARENTHESIS . expr

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 185
    identOrArray  go to state 63


State 154

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   74     | LPARENTHESIS type RPARENTHESIS expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 74 (expr)


State 155

   96 exprList: COMMA . expr exprList

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 186
    identOrArray  go to state 63


State 156

   94 contiExpr: expr exprList .

    $default  reduce using rule 94 (contiExpr)


State 157

   64 expr: expr LPARENTHESIS contiExpr RPARENTHESIS .

    $default  reduce using rule 64 (expr)


State 158

   47 giveArray: ASSIGN . arrayContent

    LBRACE  shift, and go to state 187

    $default  reduce using rule 50 (arrayContent)

    arrayContent  go to state 188


State 159

   42 array: IDENT LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList giveArray .

    $default  reduce using rule 42 (array)


State 160

  122 returnBreakContinueStmt: RETURN . expr EOL
  123                        | RETURN . EOL

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    EOL           shift, and go to state 189
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 190
    identOrArray  go to state 63


State 161

  124 returnBreakContinueStmt: BREAK . EOL

    EOL  shift, and go to state 191


State 162

  125 returnBreakContinueStmt: CONTINUE . EOL

    EOL  shift, and go to state 192


State 163

  126 forStmt: FOR . LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt

    LPARENTHESIS  shift, and go to state 193


State 164

  129 whileStmt: WHILE . LPARENTHESIS expr RPARENTHESIS stmt

    LPARENTHESIS  shift, and go to state 194


State 165

  130 whileStmt: DO . stmt WHILE LPARENTHESIS expr RPARENTHESIS EOL

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 195
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    ifOrIfElseStmt           go to state 180


State 166

  131 switchStmt: SWITCH . LPARENTHESIS expr RPARENTHESIS LBRACE switchCluses RBRACE

    LPARENTHESIS  shift, and go to state 196


State 167

  138 ifOrIfElseStmt: IF . LPARENTHESIS expr RPARENTHESIS compoundStmt mayHaveElse

    LPARENTHESIS  shift, and go to state 197


State 168

  113 stmtOrVarDeclare: scalarDeclare .

    $default  reduce using rule 113 (stmtOrVarDeclare)


State 169

    7 scalarDeclare: type . ident identList EOL
   41 arrayDeclare: type . array arrayList EOL

    IDENT    shift, and go to state 198
    MULSTAR  shift, and go to state 70

    ident  go to state 18
    id     go to state 19
    array  go to state 20


State 170

  114 stmtOrVarDeclare: arrayDeclare .

    $default  reduce using rule 114 (stmtOrVarDeclare)


State 171

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  115 stmt: expr . EOL

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    EOL           shift, and go to state 199
    LPARENTHESIS  shift, and go to state 110


State 172

  121 stmt: compoundStmt .

    $default  reduce using rule 121 (stmt)


State 173

  109 compoundStmt: LBRACE stmtOrVarDeclares . RBRACE

    RBRACE  shift, and go to state 200


State 174

  110 stmtOrVarDeclares: stmtOrVarDeclare . stmtOrVarDeclares

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    CONSTTYPE     shift, and go to state 1
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    RBRACE    reduce using rule 111 (stmtOrVarDeclares)
    $default  reduce using rule 33 (mayHaveConst)

    scalarDeclare            go to state 168
    type                     go to state 169
    type1                    go to state 6
    type2                    go to state 7
    type3                    go to state 8
    type4                    go to state 9
    mayHaveConst             go to state 10
    arrayDeclare             go to state 170
    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmtOrVarDeclares        go to state 201
    stmtOrVarDeclare         go to state 174
    stmt                     go to state 175
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    ifOrIfElseStmt           go to state 180


State 175

  112 stmtOrVarDeclare: stmt .

    $default  reduce using rule 112 (stmtOrVarDeclare)


State 176

  120 stmt: returnBreakContinueStmt .

    $default  reduce using rule 120 (stmt)


State 177

  119 stmt: forStmt .

    $default  reduce using rule 119 (stmt)


State 178

  118 stmt: whileStmt .

    $default  reduce using rule 118 (stmt)


State 179

  117 stmt: switchStmt .

    $default  reduce using rule 117 (stmt)


State 180

  116 stmt: ifOrIfElseStmt .

    $default  reduce using rule 116 (stmt)


State 181

  103 parameterList: COMMA parameter parameterList .

    $default  reduce using rule 103 (parameterList)


State 182

  100 functionDeclare: type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS EOL .

    $default  reduce using rule 100 (functionDeclare)


State 183

  108 functionDefinition: type MULSTAR IDENT LPARENTHESIS parameters RPARENTHESIS compoundStmt .

    $default  reduce using rule 108 (functionDefinition)


State 184

   45 lrSquareBracketList: LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList .

    $default  reduce using rule 45 (lrSquareBracketList)


State 185

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   73     | LPARENTHESIS type MULSTAR RPARENTHESIS expr .
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 73 (expr)


State 186

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
   96 exprList: COMMA expr . exprList

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    COMMA         shift, and go to state 155
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 97 (exprList)

    exprList  go to state 202


State 187

   49 arrayContent: LBRACE . item itemList RBRACE

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 187
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 50 (arrayContent)

    arrayContent  go to state 203
    item          go to state 204
    expr          go to state 205
    identOrArray  go to state 63


State 188

   47 giveArray: ASSIGN arrayContent .

    $default  reduce using rule 47 (giveArray)


State 189

  123 returnBreakContinueStmt: RETURN EOL .

    $default  reduce using rule 123 (returnBreakContinueStmt)


State 190

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  122 returnBreakContinueStmt: RETURN expr . EOL

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    EOL           shift, and go to state 206
    LPARENTHESIS  shift, and go to state 110


State 191

  124 returnBreakContinueStmt: BREAK EOL .

    $default  reduce using rule 124 (returnBreakContinueStmt)


State 192

  125 returnBreakContinueStmt: CONTINUE EOL .

    $default  reduce using rule 125 (returnBreakContinueStmt)


State 193

  126 forStmt: FOR LPARENTHESIS . mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 128 (mayHaveExpr)

    expr          go to state 207
    identOrArray  go to state 63
    mayHaveExpr   go to state 208


State 194

  129 whileStmt: WHILE LPARENTHESIS . expr RPARENTHESIS stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 209
    identOrArray  go to state 63


State 195

  130 whileStmt: DO stmt . WHILE LPARENTHESIS expr RPARENTHESIS EOL

    WHILE  shift, and go to state 210


State 196

  131 switchStmt: SWITCH LPARENTHESIS . expr RPARENTHESIS LBRACE switchCluses RBRACE

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 211
    identOrArray  go to state 63


State 197

  138 ifOrIfElseStmt: IF LPARENTHESIS . expr RPARENTHESIS compoundStmt mayHaveElse

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 212
    identOrArray  go to state 63


State 198

   12 id: IDENT . giveScalar
   42 array: IDENT . LSQUAREBRACKET expr RSQUAREBRACKET lrSquareBracketList giveArray

    ASSIGN          shift, and go to state 30
    LSQUAREBRACKET  shift, and go to state 31

    $default  reduce using rule 14 (giveScalar)

    giveScalar  go to state 33


State 199

  115 stmt: expr EOL .

    $default  reduce using rule 115 (stmt)


State 200

  109 compoundStmt: LBRACE stmtOrVarDeclares RBRACE .

    $default  reduce using rule 109 (compoundStmt)


State 201

  110 stmtOrVarDeclares: stmtOrVarDeclare stmtOrVarDeclares .

    $default  reduce using rule 110 (stmtOrVarDeclares)


State 202

   96 exprList: COMMA expr exprList .

    $default  reduce using rule 96 (exprList)


State 203

   54 item: arrayContent .

    $default  reduce using rule 54 (item)


State 204

   49 arrayContent: LBRACE item . itemList RBRACE

    COMMA  shift, and go to state 213

    $default  reduce using rule 52 (itemList)

    itemList  go to state 214


State 205

   53 item: expr .
   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 53 (item)


State 206

  122 returnBreakContinueStmt: RETURN expr EOL .

    $default  reduce using rule 122 (returnBreakContinueStmt)


State 207

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  127 mayHaveExpr: expr .

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110

    $default  reduce using rule 127 (mayHaveExpr)


State 208

  126 forStmt: FOR LPARENTHESIS mayHaveExpr . EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt

    EOL  shift, and go to state 215


State 209

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  129 whileStmt: WHILE LPARENTHESIS expr . RPARENTHESIS stmt

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    RPARENTHESIS  shift, and go to state 216


State 210

  130 whileStmt: DO stmt WHILE . LPARENTHESIS expr RPARENTHESIS EOL

    LPARENTHESIS  shift, and go to state 217


State 211

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  131 switchStmt: SWITCH LPARENTHESIS expr . RPARENTHESIS LBRACE switchCluses RBRACE

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    RPARENTHESIS  shift, and go to state 218


State 212

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  138 ifOrIfElseStmt: IF LPARENTHESIS expr . RPARENTHESIS compoundStmt mayHaveElse

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    RPARENTHESIS  shift, and go to state 219


State 213

   51 itemList: COMMA . item itemList

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 187
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 50 (arrayContent)

    arrayContent  go to state 203
    item          go to state 220
    expr          go to state 205
    identOrArray  go to state 63


State 214

   49 arrayContent: LBRACE item itemList . RBRACE

    RBRACE  shift, and go to state 221


State 215

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL . mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 128 (mayHaveExpr)

    expr          go to state 207
    identOrArray  go to state 63
    mayHaveExpr   go to state 222


State 216

  129 whileStmt: WHILE LPARENTHESIS expr RPARENTHESIS . stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 223
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    ifOrIfElseStmt           go to state 180


State 217

  130 whileStmt: DO stmt WHILE LPARENTHESIS . expr RPARENTHESIS EOL

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 224
    identOrArray  go to state 63


State 218

  131 switchStmt: SWITCH LPARENTHESIS expr RPARENTHESIS . LBRACE switchCluses RBRACE

    LBRACE  shift, and go to state 225


State 219

  138 ifOrIfElseStmt: IF LPARENTHESIS expr RPARENTHESIS . compoundStmt mayHaveElse

    LBRACE  shift, and go to state 148

    compoundStmt  go to state 226


State 220

   51 itemList: COMMA item . itemList

    COMMA  shift, and go to state 213

    $default  reduce using rule 52 (itemList)

    itemList  go to state 227


State 221

   49 arrayContent: LBRACE item itemList RBRACE .

    $default  reduce using rule 49 (arrayContent)


State 222

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr . EOL mayHaveExpr RPARENTHESIS stmt

    EOL  shift, and go to state 228


State 223

  129 whileStmt: WHILE LPARENTHESIS expr RPARENTHESIS stmt .

    $default  reduce using rule 129 (whileStmt)


State 224

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  130 whileStmt: DO stmt WHILE LPARENTHESIS expr . RPARENTHESIS EOL

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    RPARENTHESIS  shift, and go to state 229


State 225

  131 switchStmt: SWITCH LPARENTHESIS expr RPARENTHESIS LBRACE . switchCluses RBRACE

    CASE     shift, and go to state 230
    DEFAULT  shift, and go to state 231

    $default  reduce using rule 133 (switchCluses)

    switchCluses  go to state 232
    switchClue    go to state 233


State 226

  138 ifOrIfElseStmt: IF LPARENTHESIS expr RPARENTHESIS compoundStmt . mayHaveElse

    ELSE  shift, and go to state 234

    $default  reduce using rule 140 (mayHaveElse)

    mayHaveElse  go to state 235


State 227

   51 itemList: COMMA item itemList .

    $default  reduce using rule 51 (itemList)


State 228

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL . mayHaveExpr RPARENTHESIS stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 128 (mayHaveExpr)

    expr          go to state 207
    identOrArray  go to state 63
    mayHaveExpr   go to state 236


State 229

  130 whileStmt: DO stmt WHILE LPARENTHESIS expr RPARENTHESIS . EOL

    EOL  shift, and go to state 237


State 230

  134 switchClue: CASE . expr COLON stmts

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LPARENTHESIS  shift, and go to state 61

    expr          go to state 238
    identOrArray  go to state 63


State 231

  135 switchClue: DEFAULT . COLON stmts

    COLON  shift, and go to state 239


State 232

  131 switchStmt: SWITCH LPARENTHESIS expr RPARENTHESIS LBRACE switchCluses . RBRACE

    RBRACE  shift, and go to state 240


State 233

  132 switchCluses: switchClue . switchCluses

    CASE     shift, and go to state 230
    DEFAULT  shift, and go to state 231

    $default  reduce using rule 133 (switchCluses)

    switchCluses  go to state 241
    switchClue    go to state 233


State 234

  139 mayHaveElse: ELSE . compoundStmt

    LBRACE  shift, and go to state 148

    compoundStmt  go to state 242


State 235

  138 ifOrIfElseStmt: IF LPARENTHESIS expr RPARENTHESIS compoundStmt mayHaveElse .

    $default  reduce using rule 138 (ifOrIfElseStmt)


State 236

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr . RPARENTHESIS stmt

    RPARENTHESIS  shift, and go to state 243


State 237

  130 whileStmt: DO stmt WHILE LPARENTHESIS expr RPARENTHESIS EOL .

    $default  reduce using rule 130 (whileStmt)


State 238

   62 expr: expr . ADDONE
   63     | expr . MINUSONE
   64     | expr . LPARENTHESIS contiExpr RPARENTHESIS
   75     | expr . MULSTAR expr
   76     | expr . SLASH expr
   77     | expr . MOD expr
   78     | expr . ADD expr
   79     | expr . MINUS expr
   80     | expr . SHIFTLEFT expr
   81     | expr . SHIFTRIGHT expr
   82     | expr . BIG expr
   83     | expr . BIGOREQ expr
   84     | expr . SMALL expr
   85     | expr . SMALLOREQ expr
   86     | expr . EQ expr
   87     | expr . NOTEQ expr
   88     | expr . BITWISEAND expr
   89     | expr . XOR expr
   90     | expr . BITWISEOR expr
   91     | expr . LOGICALAND expr
   92     | expr . LOGICALOR expr
   93     | expr . ASSIGN expr
  134 switchClue: CASE expr . COLON stmts

    ASSIGN        shift, and go to state 89
    LOGICALOR     shift, and go to state 90
    LOGICALAND    shift, and go to state 91
    BITWISEOR     shift, and go to state 92
    XOR           shift, and go to state 93
    EQ            shift, and go to state 94
    NOTEQ         shift, and go to state 95
    BIGOREQ       shift, and go to state 96
    SMALLOREQ     shift, and go to state 97
    BIG           shift, and go to state 98
    SMALL         shift, and go to state 99
    SHIFTLEFT     shift, and go to state 100
    SHIFTRIGHT    shift, and go to state 101
    SLASH         shift, and go to state 102
    MOD           shift, and go to state 103
    ADD           shift, and go to state 104
    MINUS         shift, and go to state 105
    BITWISEAND    shift, and go to state 106
    MULSTAR       shift, and go to state 107
    ADDONE        shift, and go to state 108
    MINUSONE      shift, and go to state 109
    LPARENTHESIS  shift, and go to state 110
    COLON         shift, and go to state 244


State 239

  135 switchClue: DEFAULT COLON . stmts

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 137 (stmts)

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 245
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    stmts                    go to state 246
    ifOrIfElseStmt           go to state 180


State 240

  131 switchStmt: SWITCH LPARENTHESIS expr RPARENTHESIS LBRACE switchCluses RBRACE .

    $default  reduce using rule 131 (switchStmt)


State 241

  132 switchCluses: switchClue switchCluses .

    $default  reduce using rule 132 (switchCluses)


State 242

  139 mayHaveElse: ELSE compoundStmt .

    $default  reduce using rule 139 (mayHaveElse)


State 243

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS . stmt

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 247
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    ifOrIfElseStmt           go to state 180


State 244

  134 switchClue: CASE expr COLON . stmts

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 137 (stmts)

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 245
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    stmts                    go to state 248
    ifOrIfElseStmt           go to state 180


State 245

  136 stmts: stmt . stmts

    INT           shift, and go to state 47
    MYCHAR        shift, and go to state 48
    MYSTRING      shift, and go to state 49
    MYNULL        shift, and go to state 50
    DOUBLE        shift, and go to state 51
    RETURN        shift, and go to state 160
    BREAK         shift, and go to state 161
    CONTINUE      shift, and go to state 162
    FOR           shift, and go to state 163
    WHILE         shift, and go to state 164
    DO            shift, and go to state 165
    SWITCH        shift, and go to state 166
    IF            shift, and go to state 167
    IDENT         shift, and go to state 52
    ADD           shift, and go to state 53
    MINUS         shift, and go to state 54
    TILDA         shift, and go to state 55
    EXCLAMATION   shift, and go to state 56
    BITWISEAND    shift, and go to state 57
    MULSTAR       shift, and go to state 58
    ADDONE        shift, and go to state 59
    MINUSONE      shift, and go to state 60
    LBRACE        shift, and go to state 148
    LPARENTHESIS  shift, and go to state 61

    $default  reduce using rule 137 (stmts)

    expr                     go to state 171
    identOrArray             go to state 63
    compoundStmt             go to state 172
    stmt                     go to state 245
    returnBreakContinueStmt  go to state 176
    forStmt                  go to state 177
    whileStmt                go to state 178
    switchStmt               go to state 179
    stmts                    go to state 249
    ifOrIfElseStmt           go to state 180


State 246

  135 switchClue: DEFAULT COLON stmts .

    $default  reduce using rule 135 (switchClue)


State 247

  126 forStmt: FOR LPARENTHESIS mayHaveExpr EOL mayHaveExpr EOL mayHaveExpr RPARENTHESIS stmt .

    $default  reduce using rule 126 (forStmt)


State 248

  134 switchClue: CASE expr COLON stmts .

    $default  reduce using rule 134 (switchClue)


State 249

  136 stmts: stmt stmts .

    $default  reduce using rule 136 (stmts)
